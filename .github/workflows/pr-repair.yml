name: PR Repair (install → test → auto-fix → push)
on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR number to repair (e.g., 27)"
        required: true
permissions:
  contents: write
  pull-requests: write

jobs:
  repair:
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN || '' }}   # <-- lägg till

    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get PR info
        id: pr
        run: |
          set -e
          PR=${{ inputs.pr_number }}
          curl -s -H "Authorization: Bearer ${{ github.token }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR" > pr.json
          echo "head_ref=$(jq -r '.head.ref' pr.json)" >> $GITHUB_OUTPUT
          echo "base_ref=$(jq -r '.base.ref' pr.json)" >> $GITHUB_OUTPUT

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pr.outputs.head_ref }}
          fetch-depth: 0

      - name: Configure git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Merge base into PR branch
        run: git pull --no-edit origin ${{ steps.pr.outputs.base_ref }} || true

      - name: Setup Node
        uses: actions/setup-node@v4
        with: { node-version: '20', registry-url: 'https://registry.npmjs.org' }

      - name: Auth for private npm (if any)
        if: ${{ env.NPM_TOKEN != '' }}           # <-- ändra villkoret
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: '3.12' }

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit black isort flake8 pytest
          [ -f server/requirements.txt ] && pip install -r server/requirements.txt || true
          [ -d golfiq/cv-engine ] && pip install -e golfiq/cv-engine || true

      - name: Lint/format (auto-fix)
        run: |
          pre-commit run --all-files || true
          git add -A
          git diff --cached --quiet || git commit -m "style: apply pre-commit fixes"

      - name: Run tests (best effort)
        env:
          PYTHONPATH: "${{ github.workspace }}:${{ github.workspace }}/golfiq/cv-engine:${{ github.workspace }}/golfiq/cv-engine/src"
        run: pytest -q || true

      - name: Push changes back to PR branch
        run: git push || true

      - name: Post status comment on PR
        run: |
          PR=${{ inputs.pr_number }}
          MSG="PR #$PR repaired: merged base, ran pre-commit, tests, and pushed any fixes."
          curl -s -H "Authorization: Bearer ${{ github.token }}" \
               -H "Accept: application/vnd.github+json" \
               -d "{\"body\":\"$MSG\"}" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$PR/comments"
