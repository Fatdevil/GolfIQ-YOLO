name: Mobile Beta Pipelines

on:
  workflow_dispatch:

env:
  RELEASE_NOTES_FILE: docs/RELEASE_NOTES_v1.2.md
  FALLBACK_RELEASE_NOTES: Automated beta build â€“ no release notes supplied.

jobs:
  ios_beta:
    name: iOS TestFlight Beta
    runs-on: macos-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/ios/fastlane/Gemfile
      APP_STORE_ISSUER_ID: ${{ secrets.APP_STORE_ISSUER_ID }}
      APP_STORE_KEY_ID: ${{ secrets.APP_STORE_KEY_ID }}
      APP_STORE_PRIVATE_KEY: ${{ secrets.APP_STORE_PRIVATE_KEY }}
      IOS_SCHEME: ${{ secrets.IOS_SCHEME }}
      IOS_CONFIGURATION: ${{ secrets.IOS_CONFIGURATION }}
      TESTFLIGHT_EXTERNAL: ${{ secrets.TESTFLIGHT_EXTERNAL }}
      TESTFLIGHT_SKIP_WAIT: ${{ secrets.TESTFLIGHT_SKIP_WAIT }}
      APP_STORE_KEY_DURATION: ${{ secrets.APP_STORE_KEY_DURATION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Read release notes
        id: release_notes
        run: |
          NOTES_FILE="${{ env.RELEASE_NOTES_FILE }}"
          if [ -f "$NOTES_FILE" ]; then
            NOTES="$(cat "$NOTES_FILE")"
          else
            NOTES="${{ env.FALLBACK_RELEASE_NOTES }}"
          fi
          printf 'RELEASE_NOTES<<EOF\n%s\nEOF\n' "$NOTES" >> "$GITHUB_ENV"
          NOTES_ESCAPED=${NOTES//'%'/'%25'}
          NOTES_ESCAPED=${NOTES_ESCAPED//$'\n'/'%0A'}
          NOTES_ESCAPED=${NOTES_ESCAPED//$'\r'/'%0D'}
          echo "summary=$NOTES_ESCAPED" >> "$GITHUB_OUTPUT"

      - name: Cache bundler dependencies
        uses: actions/cache@v3
        with:
          path: ios/fastlane/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('ios/fastlane/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Fastlane
        run: |
          cd ios/fastlane
          bundle config set path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build and upload TestFlight beta
        run: |
          cd ios/fastlane
          bundle exec fastlane beta
        env:
          RELEASE_NOTES: ${{ env.RELEASE_NOTES }}

      - name: Publish release notes summary
        if: steps.release_notes.outputs.summary != ''
        run: echo "TestFlight changelog:%0A${{ steps.release_notes.outputs.summary }}"

  android_beta:
    name: Android Play Internal Beta
    runs-on: ubuntu-latest
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/android/fastlane/Gemfile
      GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
      ANDROID_SERVICE_ACCOUNT_JSON: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
      ANDROID_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
      ANDROID_PLAY_TRACK: ${{ secrets.ANDROID_PLAY_TRACK }}
      ANDROID_RELEASE_STATUS: ${{ secrets.ANDROID_RELEASE_STATUS }}
      ANDROID_DEFAULT_LOCALE: ${{ secrets.ANDROID_DEFAULT_LOCALE }}
      ANDROID_ROLLOUT: ${{ secrets.ANDROID_ROLLOUT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Read release notes
        id: release_notes
        run: |
          NOTES_FILE="${{ env.RELEASE_NOTES_FILE }}"
          if [ -f "$NOTES_FILE" ]; then
            NOTES="$(cat "$NOTES_FILE")"
          else
            NOTES="${{ env.FALLBACK_RELEASE_NOTES }}"
          fi
          printf 'RELEASE_NOTES<<EOF\n%s\nEOF\n' "$NOTES" >> "$GITHUB_ENV"
          NOTES_ESCAPED=${NOTES//'%'/'%25'}
          NOTES_ESCAPED=${NOTES_ESCAPED//$'\n'/'%0A'}
          NOTES_ESCAPED=${NOTES_ESCAPED//$'\r'/'%0D'}
          echo "summary=$NOTES_ESCAPED" >> "$GITHUB_OUTPUT"

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('android/**/*.gradle*', 'android/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache bundler dependencies
        uses: actions/cache@v3
        with:
          path: android/fastlane/vendor/bundle
          key: ${{ runner.os }}-android-gems-${{ hashFiles('android/fastlane/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-android-gems-

      - name: Install Fastlane
        run: |
          cd android/fastlane
          bundle config set path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build and upload Play beta
        run: |
          cd android/fastlane
          bundle exec fastlane beta_android
        env:
          RELEASE_NOTES: ${{ env.RELEASE_NOTES }}

      - name: Publish release notes summary
        if: steps.release_notes.outputs.summary != ''
        run: echo "Play Store changelog:%0A${{ steps.release_notes.outputs.summary }}"
