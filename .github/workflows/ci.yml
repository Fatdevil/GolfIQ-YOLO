name: CI
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '.github/workflows/**'
      - '**/*.md'
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Run lint
        run: |
          black --check .
          isort --check-only .
          flake8 .

  tests:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install -U pip pytest-cov coverage-badge
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          [ -d "golfiq/cv-engine" ] && pip install -e golfiq/cv-engine || true
          [ -f "server/requirements.txt" ] && pip install -r server/requirements.txt || true
      - name: Run tests
        run: |
          pytest -q --cov=server --cov=cv_engine --cov-report=xml
          COVERAGE_MODE=pr python .github/scripts/coverage_gate.py
      - name: Update baseline (main only)
        if: github.ref == 'refs/heads/main'
        env:
          COVERAGE_MODE: main
        run: python .github/scripts/coverage_gate.py
      - name: Generate badge (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p docs
          coverage-badge -o docs/coverage.svg -f
      - name: Commit badge/baseline (main only)
        if: github.ref == 'refs/heads/main'
        env:
          CODEX_PAT: ${{ secrets.CODEX_PAT }}
          GITHUB_PAT: ${{ secrets.GITHUB_PAT }}
        run: |
          set -euo pipefail
          git config user.name  "coverage-bot"
          git config user.email "coverage-bot@users.noreply.github.com"
          git add docs/coverage.svg .github/coverage-baseline.json
          git commit -m "ci(coverage): update badge/baseline [skip ci]" || echo "no changes"
          TOKEN="${CODEX_PAT:-$GITHUB_PAT}"
          git push "https://x-access-token:${TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD:${GITHUB_REF#refs/heads/}
